// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Scraper.Infrastructure.DbContexts;

#nullable disable

namespace Scraper.Infrastructure.Migrations
{
    [DbContext(typeof(ScraperWriteDbContext))]
    [Migration("20250613164342_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Scraper.Domain.Entities.OrderToScrape", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.PrimitiveCollection<string[]>("Paths")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("paths");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("Scraper.Domain.Entities.ScrapingNotice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("OrderToScrapeId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_to_scrape_id");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.ComplexProperty<Dictionary<string, object>>("Data", "Scraper.Domain.Entities.ScrapingNotice.Data#ScrapingData", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Head")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("data_head");

                            b1.Property<string>("Meta")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("data_meta");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("data_title");
                        });

                    b.HasKey("Id")
                        .HasName("pk_notices");

                    b.HasIndex("OrderToScrapeId")
                        .HasDatabaseName("ix_notices_order_to_scrape_id");

                    b.ToTable("notices", (string)null);
                });

            modelBuilder.Entity("Scraper.Domain.Entities.ScrapingNotice", b =>
                {
                    b.HasOne("Scraper.Domain.Entities.OrderToScrape", null)
                        .WithMany("Notices")
                        .HasForeignKey("OrderToScrapeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_notices_orders_order_to_scrape_id");
                });

            modelBuilder.Entity("Scraper.Domain.Entities.OrderToScrape", b =>
                {
                    b.Navigation("Notices");
                });
#pragma warning restore 612, 618
        }
    }
}
